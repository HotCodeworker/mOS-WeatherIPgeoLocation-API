mgos_rpc_channel_ws.:52 0x3ffd5a04 WS handshake resp 101
[Jun  2 17:38:30.720] mgos_provision_state:43 Current state: 2 -> 3
[Jun  2 17:38:30.720] mgos_provision_state:66 Reached stable state (3)
[Jun  2 17:38:30.816] mgos_sys_config.c:174   Saved to conf9.json
[Jun  2 17:38:30.832] event:  CONNECTED
[Jun  2 17:38:31.398] {\x0a  "ip": "122.47.26.50",\x0a  "city": "Sogongdong",\x0a  "region": "Seoul-t'ukpyolsi",\x0a  "country": "KR",\x0a  "loc": "37.5645,126.9750",\x0a  "org": "AS17858 LG POWERCOMM"\x0a}
[Jun  2 17:38:31.436] Geolocation responseText:  "{\n  \"ip\": \"122.47.26.50\",\n  \"city\": \"Sogongdong\",\n  \"region\": \"Seoul-t'ukpyolsi\",\n  \"country\": \"KR\",\n  \"loc\": \"37.5645,126.9750\",\n  \"org\": \"AS17858 LG POWERCOMM\"\n}"
[Jun  2 17:38:31.491] jsonObj:  {\x0a  "ip": "122.47.26.50",\x0a  "city": "Sogongdong",\x0a  "region": "Seoul-t'ukpyolsi",\x0a  "country": "KR",\x0a  "loc": "37.5645,126.9750",\x0a  "org": "AS17858 LG POWERCOMM"\x0a}
[Jun  2 17:38:31.491]   at ip-location.js:26
[Jun  2 17:38:31.492]   at ip-location.js:51
[Jun  2 17:38:31.492]   at api_http.js:102
[Jun  2 17:38:31.492]   at api_net.js:58
[Jun  2 17:38:31.493] MJS callback error: type error
[Jun  2 17:38:31.493]
[Jun  2 17:38:31.640] mg_rpc.c:293            Shadow.Delta via WSS_out 148.251.54.236:443
[Jun  2 17:38:31.641] event:  UPDATE_DELTA
[Jun  2 17:38:31.657] hour:  15 , min:  55



[Jun  3 16:28:06.716] Connected to Dash
[Jun  3 16:28:06.842] getting weather informations...
[Jun  3 16:28:06.954] Could not get ipAddr & geoLoc.
[Jun  3 16:28:07.402] {\x0a  "error": {\x0a    "title": "Rate limit exceeded",\x0a    "message": "Upgrade to increase
your usage limits at https://ipinfo.io/pricing, or contact us via https://ipinfo.io/contact"\x0a  }\x0a}
[Jun  3 16:28:07.489] Geolocation jsonObj:  {\x0a  "error": {\x0a    "title": "Rate limit exceeded",\x0a    "message": "Upgrade to increase your usage limits at https://ipinfo.io/pricing, or contact us via https://ipinfo.io/contact"\x0a  }\x0a}
[Jun  3 16:28:07.489]   at ip-location.js:30
[Jun  3 16:28:07.490]   at ip-location.js:56
[Jun  3 16:28:07.490]   at api_http.js:102
[Jun  3 16:28:07.490]   at api_net.js:58
[Jun  3 16:28:07.490] MJS callback error: type error
[Jun  3 16:28:07.504]
[Jun  3 16:28:11.696] Timer.REPEAT every 5 secs
[Jun  3 16:28:11.712] Connected to Dash


[Jun  4 00:37:59.418] mg_rpc.c:293            Sys.GetInfo via WSS_out 148.251.54.236:443
[Jun  4 00:38:01.777] Timer.REPEAT every 5 secs
[Jun  4 00:38:01.793] Connected to Dash
[Jun  4 00:38:01.935] getting weather informations...
[Jun  4 00:38:01.963] replace(): {  "ip": "122.47.26.50",  "city": "Sogongdong",  "country": "KR",  "loc": "37.5645,126.9750",  "org": "AS17858 LG POWERCOMM"}
Geolocation jsonObj:  <object>
[Jun  4 00:38:01.980] 122.47.26.50
[Jun  4 00:38:01.980] Sogongdong
[Jun  4 00:38:01.995] undefined
[Jun  4 00:38:01.995] KR
[Jun  4 00:38:01.995] 37.5645,126.9750
[Jun  4 00:38:02.011] AS17858 LG POWERCOMM
[Jun  4 00:38:02.394] Returned string: 37.5645
[Jun  4 00:38:02.394] Guru Meditation Error: Core  0 panic'ed (LoadProhibited). Exception was unhandled.
[Jun  4 00:38:02.394] Core 0 register dump:
[Jun  4 00:38:02.395] PC      : 0x400014fd  PS      : 0x00060630  A0      : 0x800dae9c  A1      : 0x3ffbfea0
[Jun  4 00:38:02.395] A2      : 0x00000000  A3      : 0xfffffffc  A4      : 0x000000ff  A5      : 0x0000ff00
[Jun  4 00:38:02.395] A6      : 0x00ff0000  A7      : 0xff000000  A8      : 0x00000000  A9      : 0x3ffbfe50
[Jun  4 00:38:02.396] A10     : 0x00000000  A11     : 0xffffffff  A12     : 0x00000004  A13     : 0x00000001
[Jun  4 00:38:02.396] A14     : 0x00000003  A15     : 0x00060023  SAR     : 0x0000001f  EXCCAUSE: 0x0000001c
[Jun  4 00:38:02.396] EXCVADDR: 0x00000000  LBEG    : 0x400014fd  LEND    : 0x4000150d  LCOUNT  : 0xffffffff
[Jun  4 00:38:02.397]
[Jun  4 00:38:02.397] Backtrace: 0x400014fd 0x400dae99 0x400d2fe5 0x400e8c96 0x4010143e 0x40105912 0x40107d32 0x40108b71 0x40108d85 0x40108f6b 0x400e419a 0x40187546 0x40188aa6 0x4018ba58 0x4019d185 0x40183a69 0x4008398a 0x40083b51
[Jun  4 00:38:02.397]
[Jun  4 00:38:02.397] --- BEGIN CORE DUMP ---
[Jun  4 00:38:02.398] mos: catching core dump
[Jun  4 00:38:05.150] .............
[Jun  4 00:38:42.178] ---- END CORE DUMP ----
[Jun  4 00:38:42.195] mos: wrote to D:\UbuntuOnWin10\Project\MOGG_FW\core-MOGG_FW-esp32-20190604-003842.437917978 (459449 bytes)
[Jun  4 00:38:42.199] mos: analyzing core dump
Core dump by MOGG_FW/esp32 1.0 20190603-152555
Using ELF file at: D:\UbuntuOnWin10\Project\MOGG_FW\build\objs\MOGG_FW.elf
Using Docker image: docker.io/mgos/esp32-build:3.2-r6
Running docker run --rm -v /d/UbuntuOnWin10/Project/MOGG_FW/build/objs/MOGG_FW.elf:/fw.elf -v /d/UbuntuOnWin10/Project/MOGG_FW/core-MOGG_FW-esp32-20190604-003842.437917978:/core -v D:\UbuntuOnWin10\Project\MOGG_FW:/d/UbuntuOnWin10/Project/MOGG_FW docker.io/mgos/esp32-build:3.2-r6 bash -c /usr/local/bin/serve_core.py --rom=/opt/Espressif/rom/rom.bin --rom_addr=0x40000000 --xtensa_addr_fixup=true /fw.elf /core & $MGOS_TARGET_GDB /fw.elf -ex 'target remote 127.0.0.1:1234' -ex 'set confirm off' -ex bt -ex quit
Docker

[Jun  4 01:35:57.385] sendMQTT: false, Not connected!
[Jun  4 01:35:57.386] mgos_mongoose.c:66      New heap free LWM: 84936
[Jun  4 01:36:02.356] Timer.REPEAT every 5 secs
[Jun  4 01:36:02.389] sendMQTT: false, Not connected!
[Jun  4 01:36:02.500] getting weather informations...
[Jun  4 01:36:02.516] replace(): "{  \"ip\": \"122.47.26.50\",  \"city\": \"Sogongdong\",  \"country\": \"KR\",  \"loc\": \"37.5645,126.9750\",  \"org\": \"AS17858 LG POWERCOMM\"}"
replace(): "{  \"ip\": \"122.47.26.50\",  \"city\": \"Sogongdong\",  \"country\": \"KR\",  \"loc\": \"37.5645,126.9750\",  \"org\": \"AS17858 LG POWERCOMM\"}"
[Jun  4 01:36:02.560]   at ip-location.js:31
[Jun  4 01:36:02.575]   at init.js:215
[Jun  4 01:36:02.575] MJS callback error: type error
[Jun  4 01:36:03.562] mg_ssl_if_mbedtls.c:35  0x3ffc72a4 ciphersuite: TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256
[Jun  4 01:36:04.374] SW ECDH curve 3
[Jun  4 01:36:05.124] mgos_mongoose.c:66      New heap free LWM: 79844


[Jun  4 01:49:38.480] event:  UPDATE_DELTA
[Jun  4 01:49:38.495] hour:  15 , min:  55
[Jun  4 01:49:39.366] mg_rpc.c:293            Sys.GetInfo via WSS_out 148.251.54.236:443
[Jun  4 01:49:40.720] Timer.REPEAT every 5 secs
[Jun  4 01:49:40.752] Connected to Dash
[Jun  4 01:49:40.864] getting weather informations...
[Jun  4 01:49:40.959] replace(): "{  \"ip\": \"122.47.26.50\",  \"city\": \"Sogongdong\",  \"country\": \"KR\",  \"loc\": \"37.5645,126.9750\",  \"org\": \"AS17858 LG POWERCOMM\"}"
replace(): "{  \"ip\": \"122.47.26.50\",  \"city\": \"Sogongdong\",  \"country\": \"KR\",  \"loc\": \"37.5645,126.9750\",  \"org\": \"AS17858 LG POWERCOMM\"}"
replace(): {  \ip\: \122.47.26.50\,  \city\: \Sogongdong\,  \country\: \KR\,  \loc\: \37.5645,126.9750\,  \org\: \AS17858 LG POWERCOMM\}
[Jun  4 01:49:40.960]   at ip-location.js:30
[Jun  4 01:49:40.961]   at init.js:215
[Jun  4 01:49:40.961] MJS callback error: invalid JSON string
Timer.REPEAT every 5 secs
[Jun  4 01:49:45.724] Connected to Dash


[Jun  4 01:57:08.910] mg_rpc.c:293            Sys.GetInfo via WSS_out 148.251.54.236:443
[Jun  4 01:57:10.679] Timer.REPEAT every 5 secs
[Jun  4 01:57:10.730] Connected to Dash
[Jun  4 01:57:10.839] getting weather informations...
[Jun  4 01:57:10.854] replace(): "{  \"ip\": \"122.47.26.50\",  \"city\": \"Sogongdong\",  \"country\": \"KR\",  \"loc\": \"37.5645,126.9750\",  \"org\": \"AS17858 LG POWERCOMM\"}"
replace(): "{  \"ip\": \"122.47.26.50\",  \"city\": \"Sogongdong\",  \"country\": \"KR\",  \"loc\": \"37.5645,126.9750\",  \"org\": \"AS17858 LG POWERCOMM\"}"
replace(): "{  "ip": "122.47.26.50",  "city": "Sogongdong",  "country": "KR",  "loc": "37.5645,126.9750",  "org": "AS17858 LG POWERCOMM"}"
[Jun  4 01:57:10.916]   at ip-location.js:32
[Jun  4 01:57:10.929]   at init.js:215
[Jun  4 01:57:10.929] MJS callback error: type error


[Jun  4 02:39:24.993] Connected to Dash
[Jun  4 02:39:25.120] getting weather informations...
[Jun  4 02:39:25.216] Could not get ipAddr & geoLoc.
[Jun  4 02:39:25.758] {\x0a  "error": {\x0a    "title": "Rate limit exceeded",\x0a    "message": "Upgrade to increase your usage limits at https://ipinfo.io/pricing, or contact us via https://ipinfo.io/contact"\x0a  }\x0a}
[Jun  4 02:39:25.845] replace(): "{\n  \"error\": {\n    \"title\": \"Rate limit exceeded\",\n    \"message\": \"Upgrade to increase your usage limits at https://ipinfo.io/pricing, or contact us via https://ipinfo.io/contact\"\n  }\n}"
replace(): "{\n  "error": {\n    "title": "Rate limit exceeded",\n    "message": "Upgrade to increase your usage limits at https://ipinfo.io/pricing, or contact us via https://ipinfo.io/contact"\n  }\n}"
replace(): "{\n  "error": {\n    "title": "Rate limit exceeded",\n    "message": "Upgrade to increase your usage limits at https://ipinfo.io/pricing, or contact us via https://ipinfo.io/contact"\n  }\n}"
text:  "{\n  "error": {\n    "title": "Rate limit exceeded",\n    "message": "Upgrade to increase your usage limits at https://ipinfo.io/pricing, or contact us via https://ipinfo.io/contact"\n  }\n}"
[Jun  4 02:39:25.886]   at ip-location.js:33
[Jun  4 02:39:25.886]   at ip-location.js:71
[Jun  4 02:39:25.887]   at api_http.js:102
[Jun  4 02:39:25.887]   at api_net.js:58
[Jun  4 02:39:25.887] MJS callback error: type error


/////////////////////////////////////////////////////////////////////////////////////////////////
//
// success log: ip-geoloc.js
//
/////////////////////////////////////////////////////////////////////////////////////////////////
[Jun  4 03:05:16.181] mgos_mongoose.c:66      New heap free LWM: 84576
[Jun  4 03:05:21.135] Timer.REPEAT every 5 secs
[Jun  4 03:05:21.167] sendMQTT: false, Not connected!
[Jun  4 03:05:21.280] getting weather informations...
[Jun  4 03:05:21.391] Could not get ipAddr & geoLoc.
[Jun  4 03:05:21.863] {\x0a  "ip": "122.47.26.50",\x0a  "city": "Sogongdong",\x0a  "region": "Seoul-t'ukpyolsi",\x0a  "country": "KR",\x0a  "loc": "37.5645,126.9750",\x0a  "org": "AS17858 LG POWERCOMM"\x0a}
[Jun  4 03:05:21.937] replace(): "{\n  \"ip\": \"122.47.26.50\",\n  \"city\": \"Sogongdong\",\n  \"region\": \"Seoul-t'ukpyolsi\",\n  \"country\": \"KR\",\n  \"loc\": \"37.5645,126.9750\",\n  \"org\": \"AS17858 LG POWERCOMM\"\n}"
replace(): "{\n  "ip": "122.47.26.50",\n  "city": "Sogongdong",\n  "region": "Seoul-t'ukpyolsi",\n  "country": "KR",\n  "loc": "37.5645,126.9750",\n  "org": "AS17858 LG POWERCOMM"\n}"
replace(): "{  "ip": "122.47.26.50",  "city": "Sogongdong",  "region": "Seoul-t'ukpyolsi",  "country": "KR",  "loc": "37.5645,126.9750",  "org": "AS17858 LG POWERCOMM"}"
1st resultTxt:    "ip": "122.47.26.50",  "city": "Sogongdong",  "region": "Seoul-t'ukpyolsi",  "country": "KR",  "loc": "37.5645,126.9750",  "org": "AS17858 LG POWERCOMM"
[Jun  4 03:05:21.996] 2nd resultTxt:  {  "ip": "122.47.26.50",  "city": "Sogongdong",  "region": "Seoul-t'ukpyolsi",  "country": "KR",  "loc": "37.5645,126.9750",  "org": "AS17858 LG POWERCOMM"}
[Jun  4 03:05:22.012] Geolocation jsonObj:  <object>
[Jun  4 03:05:22.012] 122.47.26.50
[Jun  4 03:05:22.012] Sogongdong
[Jun  4 03:05:22.028] KR
[Jun  4 03:05:22.028] 37.5645,126.9750
[Jun  4 03:05:22.029] AS17858 LG POWERCOMM
[Jun  4 03:05:22.091] split2str() 1th string: 37.5645
split2str() 2th string: 126.9750
[Jun  4 03:05:22.698] mg_ssl_if_mbedtls.c:35  0x3ffc72c8 ciphersuite: TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256
[Jun  4 03:05:23.495] SW ECDH curve 3
[Jun  4 03:05:24.275] mgos_mongoose.c:66      New heap free LWM: 77784
[Jun  4 03:05:24.866] mgos_rpc_channel_ws.:52 0x3ffd5920 WS handshake resp 101
[Jun  4 03:05:24.891] mgos_provision_state:43 Current state: 2 -> 3
[Jun  4 03:05:24.891] mgos_provision_state:66 Reached stable state (3)
[Jun  4 03:05:24.987] mgos_sys_config.c:174   Saved to conf9.json


[Jun  4 04:28:41.242] sendMQTT: false, Not connected!
[Jun  4 04:28:41.401] getting weather informations...
[Jun  4 04:28:41.402]   at init.js:220
[Jun  4 04:28:41.449] MJS callback error: [ipGetLoc] is not defined
[Jun  4 04:28:42.166] SW ECDH curve 3

[Jun  4 04:43:33.540] Timer.REPEAT every 5 secs
[Jun  4 04:43:33.572] sendMQTT: false, Not connected!
[Jun  4 04:43:33.733] getting weather informations...
[Jun  4 04:43:33.748] ip:
[Jun  4 04:43:33.748] city:
[Jun  4 04:43:33.764] country:
[Jun  4 04:43:33.764] latitude:  37.564500
[Jun  4 04:43:33.779] logitude:  126.975000
[Jun  4 04:43:33.779] organization:
[Jun  4 04:43:33.796] lati:  37.564500 longi:  126.975000
[Jun  4 04:43:33.841]   at LccDfs.js:18
[Jun  4 04:43:33.841]   at init.js:223
[Jun  4 04:43:33.841] MJS callback error: implicit type conversion is prohibited


[Jun  4 04:51:56.580] getting weather informations...
[Jun  4 04:51:56.597] ip:
[Jun  4 04:51:56.597] city:
[Jun  4 04:51:56.598] country:
[Jun  4 04:51:56.612] latitude:  37.564500
[Jun  4 04:51:56.612] logitude:  126.975000
[Jun  4 04:51:56.629] organization:
[Jun  4 04:51:56.645] lati:  37.564500 longi:  126.975000
[Jun  4 04:51:56.692]   at LccDfs.js:28
[Jun  4 04:51:56.692]   at init.js:223
[Jun  4 04:51:56.692] MJS callback error: calling non-callable


[Jun  4 04:55:31.828] getting weather informations...
[Jun  4 04:55:31.844] ip:
[Jun  4 04:55:31.844] city:
[Jun  4 04:55:31.862] country:
[Jun  4 04:55:31.863] latitude:  37.564500
[Jun  4 04:55:31.876] logitude:  126.975000
[Jun  4 04:55:31.876] organization:
[Jun  4 04:55:31.892] lati:  37.564500 longi:  126.975000
[Jun  4 04:55:31.955]   at LccDfs.js:35
[Jun  4 04:55:31.955]   at init.js:223
[Jun  4 04:55:32.033] MJS callback error: Use ===, not ==


/////////////////////////////////////////////////////////////////////////////////////////////////
//
// success log: LccDfs.js
//
/////////////////////////////////////////////////////////////////////////////////////////////////
[Jun  4 05:00:42.402] Timer.REPEAT every 5 secs
[Jun  4 05:00:42.419] Connected to Dash
[Jun  4 05:00:42.593] getting weather informations...
[Jun  4 05:00:42.609] ip:
[Jun  4 05:00:42.626] city:
[Jun  4 05:00:42.626] country:
[Jun  4 05:00:42.626] latitude:  37.564500
[Jun  4 05:00:42.642] logitude:  126.975000
[Jun  4 05:00:42.642] organization:
[Jun  4 05:00:42.657] lati:  37.564500 longi:  126.975000
[Jun  4 05:00:42.738] rs.nx:  60 rs.ny:  127
[Jun  4 05:00:47.406] Timer.REPEAT every 5 secs



[Jun  4 05:14:46.784] app_main initedBuilt-in led pin number:  14
[Jun  4 05:14:46.801] Built-in button pin number:  26
[Jun  4 05:14:47.172]   at init.js:208
[Jun  4 05:14:47.172] MJS error: failed to exec file "weather.js": parse error at line 129: [switch(Wea]
[Jun  4 05:14:47.173] mgos_mongoose.c:66      New heap free LWM: 78540
[Jun  4 05:14:47.173] mgos_ota_core.c:1308    UID: 0ffdea45903287aa, license: none
[Jun  4 05:14:47.174] mgos_net.c:85           WiFi STA: connecting


[Jun  4 05:25:23.586] app_main initedBuilt-in led pin number:  14
[Jun  4 05:25:23.603] Built-in button pin number:  26
[Jun  4 05:25:23.973]   at init.js:208
[Jun  4 05:25:23.973] MJS error: failed to exec file "weather.js": parse error at line 129: [switch(Wea]
[Jun  4 05:25:23.974] mgos_mongoose.c:66      New heap free LWM: 78708

[Jun  4 05:31:32.261] app_main initedBuilt-in led pin number:  14
[Jun  4 05:31:32.278] Built-in button pin number:  26
[Jun  4 05:31:32.647]   at init.js:208
[Jun  4 05:31:32.647] MJS error: failed to exec file "weather.js": parse error at line 129: [switch(Wea]
[Jun  4 05:31:32.647] mgos_mongoose.c:66      New heap free LWM: 78704

//
// Weather.js - debug log:
// 
//
[Jun  4 06:47:23.497] getting weather informations...
[Jun  4 06:47:23.497] lati:  37.564500 longi:  126.975000
[Jun  4 06:47:23.529] rs.nx:  60 rs.ny:  127
[Jun  4 06:47:23.577] ++++ {"Timenow":1559598443.137944}
[Jun  4 06:47:23.577] ++++ {"Timenow":"2019-06-03 21:47:23"}
[Jun  4 06:47:23.605] ++++ {"local":1559544443.137944}
[Jun  4 06:47:23.605] ++++ {"local":"2019-06-03 06:47:23"}
[Jun  4 06:47:23.680] ++++ {"Current":1559544443.137944}
[Jun  4 06:47:23.680] ++++ {"Current":"2019-06-03 06:47:23"}
[Jun  4 06:47:23.743] hour:   min:
[Jun  4 06:47:23.824] Could not get weather info.
[Jun  4 06:47:23.980] <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">\x0a<HTML><HEAD>\x0a<TITLE> 400 Bad Request </TITLE>\x0a</HEAD><BODY>\x0a<H1>Bad Request</H1>\x0a<HR>\x0a</BODY></HTML>\x0a
[Jun  4 06:47:23.981]   at weather.js:15
[Jun  4 06:47:23.981]   at weather.js:89
[Jun  4 06:47:23.981]   at api_http.js:102
[Jun  4 06:47:23.982]   at api_net.js:58
[Jun  4 06:47:23.982] MJS callback error: invalid JSON string



[Jun  4 07:02:20.555] rs.nx:  60 rs.ny:  127
[Jun  4 07:02:20.602] ++++ {"Timenow":1559599340.123379}
[Jun  4 07:02:20.602] ++++ {"Timenow":"2019-06-03 22:02:20"}
[Jun  4 07:02:20.631] ++++ {"Weather":1559545340.123379}
[Jun  4 07:02:20.631] ++++ {"Weather":"2019-06-03 07:02:20"}
[Jun  4 07:02:20.708] ++++ {"Current":1559545340.123379}
[Jun  4 07:02:20.708] ++++ {"Current":"2019-06-03 07:02:20"}
[Jun  4 07:02:20.770] hour:     min:
[Jun  4 07:02:20.815] forecastURL:  http://newsky2.kma.go.kr/service/SecndSrtpdFrcstInfoService2/ForecastSpaceData?ServiceKey=GsIEPvrEMExP3XquMGH1bYL8tixNTFkfjICqMXpMg3z2%2Fm3GzrMkyvfkwMdk6bidaAPFrsJrojC829XMl0anMQ%3D%3D&base_date="    ""  ""  "&base_time=  00&nx=&ny=&pageNo=1&numOfRows=7&_type=json
[Jun  4 07:02:20.879] Could not get weather info.
[Jun  4 07:02:21.032] <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">\x0a<HTML><HEAD>\x0a<TITLE> 400 Bad Request </TITLE>\x0a</HEAD><BODY>\x0a<H1>Bad Request</H1>\x0a<HR>\x0a</BODY></HTML>\x0a
[Jun  4 07:02:21.032]   at weather.js:15
[Jun  4 07:02:21.033]   at weather.js:91
[Jun  4 07:02:21.033]   at api_http.js:102
[Jun  4 07:02:21.034]   at api_net.js:58
[Jun  4 07:02:21.035] MJS callback error: invalid JSON string

//
// Time2.js - debug log.
//
//
[Jun  4 16:49:07.468] rs.nx:  60 rs.ny:  127
[Jun  4 16:49:07.549] ++++ {"Timenow":1559634546.698092}
[Jun  4 16:49:07.565] ++++ {"Timenow":"2019-06-04 07:49:07"}
[Jun  4 16:49:07.675] ++++ {"Weather":1559580546.698092}
[Jun  4 16:49:07.691] ++++ {"Weather":"2019-06-03 16:49:07"}
[Jun  4 16:49:07.847]   at time2.js:81
[Jun  4 16:49:07.847]   at time2.js:30
[Jun  4 16:49:07.847]   at weather.js:31
[Jun  4 16:49:07.847]   at init.js:226
[Jun  4 16:49:07.848] MJS callback error: invalid JSON string
[Jun  4 16:49:12.054] Timer.REPEAT every 5 secs

[Jun  4 16:53:37.713] lati:  37.564500 longi:  126.975000
[Jun  4 16:53:37.809] rs.nx:  60 rs.ny:  127
[Jun  4 16:53:37.889] ++++ {"Timenow":1559634817.196496}
[Jun  4 16:53:37.905] ++++ {"Timenow":"2019-06-04 07:53:37"}
[Jun  4 16:53:38.000] ++++ {"Weather":1559580817.196496}
[Jun  4 16:53:38.032] ++++ {"Weather":"2019-06-03 16:53:37"}
[Jun  4 16:53:38.160]   at time2.js:81
[Jun  4 16:53:38.182]   at time2.js:30
[Jun  4 16:53:38.213]   at weather.js:31
[Jun  4 16:53:38.213]   at init.js:226
[Jun  4 16:53:38.213] MJS callback error: invalid JSON string


[Jun  4 17:15:03.271] rs.nx:  60 rs.ny:  127
[Jun  4 17:15:03.334] ++++ {"Timenow":1559636102.603177}
[Jun  4 17:15:03.366] ++++ {"Timenow":"2019-06-04 08:15:03"}
[Jun  4 17:15:03.461] ++++ {"Weather":1559582102.603177}
[Jun  4 17:15:03.478] ++++ {"Weather":"2019-06-03 17:15:03"}
[Jun  4 17:15:03.622] yearStr:
[Jun  4 17:15:03.656] yearStr.slice(0):
[Jun  4 17:15:03.657]   at time2.js:83
[Jun  4 17:15:03.657]   at time2.js:30
[Jun  4 17:15:03.658]   at weather.js:31
[Jun  4 17:15:03.659]   at init.js:226
[Jun  4 17:15:03.660] MJS callback error: invalid JSON string


[Jun  4 17:55:19.853] getting weather informations...
[Jun  4 17:55:19.869] lati:  37.564500 longi:  126.975000
[Jun  4 17:55:19.949] rs.nx:  60 rs.ny:  127
[Jun  4 17:55:20.027] ++++ {"Timenow":1559638518.528558}
[Jun  4 17:55:20.059] ++++ {"Timenow":"2019-06-04 08:55:19"}
[Jun  4 17:55:20.155] ++++ {"Weather":1559584518.528558}
[Jun  4 17:55:20.188] ++++ {"Weather":"2019-06-03 17:55:19"}
[Jun  4 17:55:20.220] yearStr:
[Jun  4 17:55:20.220] ++++ {"Year":"    "}
[Jun  4 17:55:20.252] yearStr:
[Jun  4 17:55:20.267] JSON.Year:
[Jun  4 17:55:20.315] ++++ {"Month":"  "}
[Jun  4 17:55:20.346] ++++ {"Day":"  "}
[Jun  4 17:55:20.379] ++++ {"Hour":"  "}
[Jun  4 17:55:20.411] ++++ {"Min":"  "}
[Jun  4 17:55:20.459] ++++ {"Sec":" "}
[Jun  4 17:55:20.459] yearStr:
[Jun  4 17:55:20.459] yearStr.slice(0):
[Jun  4 17:55:20.492]   at time2.js:95
[Jun  4 17:55:20.492]   at time2.js:31
[Jun  4 17:55:20.493]   at weather.js:31
[Jun  4 17:55:20.493]   at init.js:226
[Jun  4 17:55:20.520] MJS callback error: invalid JSON string
[Jun  4 17:55:24.524] Timer.REPEAT every 5 secs


Jun  4 18:04:25.234] getting weather informations...
[Jun  4 18:04:25.251] lati:  37.564500 longi:  126.975000
[Jun  4 18:04:25.331] rs.nx:  60 rs.ny:  127
[Jun  4 18:04:25.426] ++++ {"Timenow":1559639063.959347}
[Jun  4 18:04:25.442] ++++ {"Timenow":"2019-06-04 09:04:24"}
[Jun  4 18:04:25.537] ++++ {"Weather":1559671463.959347}
[Jun  4 18:04:25.569] ++++ {"Weather":"2019-06-04 18:04:24"}
[Jun  4 18:04:25.602] ++++ {"Year":"2019-06-04 18:04:24"}
[Jun  4 18:04:25.618] yearStr:
[Jun  4 18:04:25.634] ++++ {"Year":"    "}
[Jun  4 18:04:25.650] yearStr:
[Jun  4 18:04:25.666] JSON.Year:
[Jun  4 18:04:25.714] ++++ {"Month":"  "}
[Jun  4 18:04:25.746] ++++ {"Day":"  "}
[Jun  4 18:04:25.777] ++++ {"Hour":"  "}
[Jun  4 18:04:25.808] ++++ {"Min":"  "}
[Jun  4 18:04:25.856] ++++ {"Sec":" "}
[Jun  4 18:04:25.856] yearStr:
[Jun  4 18:04:25.893] yearStr.slice(0):
[Jun  4 18:04:25.893]   at time2.js:99
[Jun  4 18:04:25.894]   at time2.js:31
[Jun  4 18:04:25.894]   at weather.js:31
[Jun  4 18:04:25.894]   at init.js:226
[Jun  4 18:04:25.894] MJS callback error: invalid JSON string
[Jun  4 18:04:29.924] Timer.REPEAT every 5 secs
[Jun  4 18:04:29.941] Connected to Dash

[Jun  4 18:08:02.777] mg_rpc.c:293            Sys.GetInfo via WSS_out 148.251.54.236:443
[Jun  4 18:08:06.427] Timer.REPEAT every 5 secs
[Jun  4 18:08:06.459] Connected to Dash
[Jun  4 18:08:06.744] getting weather informations...
[Jun  4 18:08:06.759] lati:  37.564500 longi:  126.975000
[Jun  4 18:08:06.840] rs.nx:  60 rs.ny:  127
[Jun  4 18:08:06.919] ++++ {"Timenow":1559639286.260598}
[Jun  4 18:08:06.952] ++++ {"Timenow":"2019-06-04 09:08:06"}
[Jun  4 18:08:07.046] ++++ {"Weather":1559671686.260598}
[Jun  4 18:08:07.078] ++++ {"Weather":"2019-06-04 18:08:06"}
[Jun  4 18:08:07.111] ++++ {"Year":"    "}
[Jun  4 18:08:07.111] yearStr:
[Jun  4 18:08:07.126] ++++ {"Year":"    "}
[Jun  4 18:08:07.161] yearStr:
[Jun  4 18:08:07.175] JSON.Year:
[Jun  4 18:08:07.206] ++++ {"Month":"  "}
[Jun  4 18:08:07.238] ++++ {"Day":"  "}
[Jun  4 18:08:07.287] ++++ {"Hour":"  "}
[Jun  4 18:08:07.319] ++++ {"Min":"  "}
[Jun  4 18:08:07.351] ++++ {"Sec":" "}
[Jun  4 18:08:07.366] yearStr:
[Jun  4 18:08:07.366] yearStr.slice(0):
[Jun  4 18:08:07.390]   at time2.js:99
[Jun  4 18:08:07.390]   at time2.js:31
[Jun  4 18:08:07.390]   at weather.js:31
[Jun  4 18:08:07.390]   at init.js:226
[Jun  4 18:08:07.391] MJS callback error: invalid JSON string


[Jun  4 18:22:01.500] Timer.REPEAT every 5 secs
[Jun  4 18:22:01.531] Connected to Dash
[Jun  4 18:22:01.818] getting weather informations...
[Jun  4 18:22:01.945] Could not get ipAddr & geoLoc.
[Jun  4 18:22:02.503] {\x0a  "ip": "122.47.26.50",\x0a  "city": "Sogongdong",\x0a  "region": "Seoul-t'ukpyolsi",\x0a  "country": "KR",\x0a  "loc": "37.5645,126.9750",\x0a  "org": "AS17858 LG POWERCOMM"\x0a}
[Jun  4 18:22:02.544] Geolocation jsonObj:  <object>
[Jun  4 18:22:02.561] 122.47.26.50
[Jun  4 18:22:02.561] Sogongdong
[Jun  4 18:22:02.562] KR
[Jun  4 18:22:02.577] 37.5645,126.9750
[Jun  4 18:22:02.577] AS17858 LG POWERCOMM
[Jun  4 18:22:02.640] split2str() 1th string: 37.5645 split2str() 2th string: 126.9750 Timer.REPEAT every 5 secs


[Jun  4 22:05:08.036] Connected to Dash
[Jun  4 22:05:08.369] getting weather informations...
[Jun  4 22:05:08.387] lati:  37.564500 longi:  126.975000
[Jun  4 22:05:08.465] rs.nx:  60 rs.ny:  127
[Jun  4 22:05:08.560] ++++ {"UnixTime":1559653506.894111}
[Jun  4 22:05:08.576] ++++ {"UnixTime":"2019-06-04 13:05:07"}
[Jun  4 22:05:08.673] ++++ {"CurrentTime":1559685906.894111}
[Jun  4 22:05:08.689] ++++ {"CurrentTime":"2019-06-04 22:05:07"}
[Jun  4 22:05:08.800] ++++ {"WeatherTime":1559685906.894111}
[Jun  4 22:05:08.816] ++++ {"WeatherTime":"2019-06-04 22:05:07"}
[Jun  4 22:05:08.832] WeatherTimeStmapStr:  2019-06-04 22:05:07
[Jun  4 22:05:08.864] yearStr:  2019
[Jun  4 22:05:08.879] localTIME.WeatherYear:  2019
[Jun  4 22:05:08.895] +++ Weather time +++
[Jun  4 22:05:08.895] Year:  2019
[Jun  4 22:05:08.911] Month:  1
[Jun  4 22:05:08.927] Day:  1
[Jun  4 22:05:08.927] Hour:  16
[Jun  4 22:05:08.944] Minute:  30
[Jun  4 22:05:08.944] Sec:  35
[Jun  4 22:05:09.002]   at weather.js:58
[Jun  4 22:05:09.002]   at init.js:226
[Jun  4 22:05:09.003] MJS callback error: implicit type conversion is prohibited


[Jun  4 22:17:35.479] mg_rpc.c:293            Sys.GetInfo via WSS_out 148.251.54.236:443
[Jun  4 22:17:38.411] Timer.REPEAT every 5 secs
[Jun  4 22:17:38.443] Connected to Dash
[Jun  4 22:17:38.795] getting weather informations...
[Jun  4 22:17:38.811] lati:  37.564500 longi:  126.975000
[Jun  4 22:17:38.891] rs.nx:  60 rs.ny:  127
[Jun  4 22:17:38.985] ++++ {"UnixTime":1559654257.894663}
[Jun  4 22:17:39.002] ++++ {"UnixTime":"2019-06-04 13:17:38"}
[Jun  4 22:17:39.098] ++++ {"CurrentTime":1559686657.894663}
[Jun  4 22:17:39.113] ++++ {"CurrentTime":"2019-06-04 22:17:38"}
[Jun  4 22:17:39.210] ++++ {"WeatherTime":1559686657.894663}
[Jun  4 22:17:39.242] ++++ {"WeatherTime":"2019-06-04 22:17:38"}
[Jun  4 22:17:39.305] secStr:  38
[Jun  4 22:17:39.368] localTIME.WeatherSec:  38
[Jun  4 22:17:39.384] +++ Weather time +++
[Jun  4 22:17:39.401] Year:  2019
[Jun  4 22:17:39.416] Month:  6
[Jun  4 22:17:39.416] Day:  4
[Jun  4 22:17:39.433] Hour:  22
[Jun  4 22:17:39.433] Minute:  17
[Jun  4 22:17:39.449] Sec:  38
[Jun  4 22:17:39.507]   at weather.js:58
[Jun  4 22:17:39.507]   at init.js:226
[Jun  4 22:17:39.507] MJS callback error: implicit type conversion is prohibited


[Jun  4 22:46:28.853] Connected to Dash
[Jun  4 22:46:29.204] getting weather informations...
[Jun  4 22:46:29.221] lati:  37.564500 longi:  126.975000
[Jun  4 22:46:29.314] rs.nx:  60 rs.ny:  127
[Jun  4 22:46:29.410] ++++ {"UnixTime":1559655987.721529}
[Jun  4 22:46:29.426] ++++ {"UnixTime":"2019-06-04 13:46:28"}
[Jun  4 22:46:29.506] ++++ {"CurrentTime":1559688387.721529}
[Jun  4 22:46:29.537] ++++ {"CurrentTime":"2019-06-04 22:46:28"}
[Jun  4 22:46:29.633] ++++ {"WeatherTime":1559688387.721529}
[Jun  4 22:46:29.650] ++++ {"WeatherTime":"2019-06-04 22:46:28"}
[Jun  4 22:46:29.793] +++ Weather time +++
[Jun  4 22:46:29.809] Year:  2019
[Jun  4 22:46:29.809] Month:  6
[Jun  4 22:46:29.824] Day:  4
[Jun  4 22:46:29.824] Hour:  22
[Jun  4 22:46:29.840] Minute:  46
[Jun  4 22:46:29.840] Sec:  28
[Jun  4 22:46:29.969] yearStr:  2019 monthStr:  6 dayStr:  04
[Jun  4 22:46:29.984] hourStr:  22 minStr:  46
[Jun  4 22:46:30.151] forecastURL:  http://newsky2.kma.go.kr/service/SecndSrtpdFrcstInfoService2/ForecastSpaceData?ServiceKey=GsIEPvrEMExP3XquMGH1bYL8tixNTFkfjICqMXpMg3z2%2Fm3GzrMkyvfkwMdk6bidaAPFrsJrojC829XMl0anMQ%3D%3D&base_date=2019604&base_time=2200&nx=&ny=&pageNo=1&numOfRows=7&_type=json
[Jun  4 22:46:33.817] Timer.REPEAT every 5 secs


[Jun  4 22:54:36.491] Connected to Dash
[Jun  4 22:54:36.843] getting weather informations...
[Jun  4 22:54:36.859] lati:  37.564500 longi:  126.975000
[Jun  4 22:54:36.955] rs.nx:  60 rs.ny:  127
[Jun  4 22:54:37.033] ++++ {"UnixTime":1559656475.282468}
[Jun  4 22:54:37.066] ++++ {"UnixTime":"2019-06-04 13:54:35"}
[Jun  4 22:54:37.147] ++++ {"CurrentTime":1559688875.282468}
[Jun  4 22:54:37.162] ++++ {"CurrentTime":"2019-06-04 22:54:35"}
[Jun  4 22:54:37.258] ++++ {"WeatherTime":1559688875.282468}
[Jun  4 22:54:37.289] ++++ {"WeatherTime":"2019-06-04 22:54:35"}
[Jun  4 22:54:37.415] +++ Weather time +++
[Jun  4 22:54:37.432] Year:  2019
[Jun  4 22:54:37.448] Month:  6
[Jun  4 22:54:37.448] Day:  4
[Jun  4 22:54:37.464] Hour:  22
[Jun  4 22:54:37.480] Minute:  54
[Jun  4 22:54:37.480] Sec:  35
[Jun  4 22:54:37.592] yearStr:  2019 monthStr:  6 dayStr:  04
[Jun  4 22:54:37.607] hourStr:  22 minStr:  54
[Jun  4 22:54:37.607] nx:  undefined nxStr:
[Jun  4 22:54:37.622] ny:  undefined nxStr:
[Jun  4 22:54:37.790] forecastURL:  http://newsky2.kma.go.kr/service/SecndSrtpdFrcstInfoService2/ForecastSpaceData?ServiceKey=GsIEPvrEMExP3XquMGH1bYL8tixNTFkfjICqMXpMg3z2%2Fm3GzrMkyvfkwMdk6bidaAPFrsJrojC829XMl0anMQ%3D%3D&base_date=2019604&base_time=2200&nx=&ny=&pageNo=1&numOfRows=7&_type=json


[Jun  4 22:57:45.006] Timer.REPEAT every 5 secs
[Jun  4 22:57:45.038] sendMQTT: false, Not connected!
[Jun  4 22:57:45.389] getting weather informations...
[Jun  4 22:57:45.404] lati:  37.564500 longi:  126.975000
[Jun  4 22:57:45.499] rs.nx:  60 rs.ny:  127
[Jun  4 22:57:45.579] ++++ {"UnixTime":13.127603}
[Jun  4 22:57:45.595] ++++ {"UnixTime":"1970-01-01 00:00:13"}
[Jun  4 22:57:45.674] ++++ {"CurrentTime":32413.127603}
[Jun  4 22:57:45.690] ++++ {"CurrentTime":"1970-01-01 09:00:13"}
[Jun  4 22:57:45.785] ++++ {"WeatherTime":32413.127603}
[Jun  4 22:57:45.801] ++++ {"WeatherTime":"1970-01-01 09:00:13"}
[Jun  4 22:57:45.946] +++ Weather time +++
[Jun  4 22:57:45.961] Year:  1970
[Jun  4 22:57:45.961] Month:  1
[Jun  4 22:57:45.978] Day:  1
[Jun  4 22:57:45.978] Hour:  9
[Jun  4 22:57:45.993] Minute:  0
[Jun  4 22:57:45.993] Sec:  13
[Jun  4 22:57:46.121] yearStr:  1970 monthStr:  1 dayStr:  01
[Jun  4 22:57:46.136] hourStr:  08 minStr:  00
[Jun  4 22:57:46.303] forecastURL:  http://newsky2.kma.go.kr/service/SecndSrtpdFrcstInfoService2/ForecastSpaceData?ServiceKey=GsIEPvrEMExP3XquMGH1bYL8tixNTFkfjICqMXpMg3z2%2Fm3GzrMkyvfkwMdk6bidaAPFrsJrojC829XMl0anMQ%3D%3D&base_date=1970101&base_time=0800&nx=60&ny=127&pageNo=1&numOfRows=7&_type=json
[Jun  4 22:57:50.000] Timer.REPEAT every 5 secs

Jun  4 23:08:36.426] rs.nx:  60 rs.ny:  127
[Jun  4 23:08:36.522] ++++ {"UnixTime":1559657314.781437}
[Jun  4 23:08:36.539] ++++ {"UnixTime":"2019-06-04 14:08:35"}
[Jun  4 23:08:36.583]   at time2.js:61
[Jun  4 23:08:36.584]   at weather.js:41
[Jun  4 23:08:36.585]   at init.js:226
[Jun  4 23:08:36.586] MJS callback error: [WeatherTimeStampStr] is not defined
[Jun  4 23:08:40.950] Timer.REPEAT every 5 secs


[Jun  4 23:13:56.731] Connected to Dash
[Jun  4 23:13:57.082] getting weather informations...
[Jun  4 23:13:57.098] lati:  37.564500 longi:  126.975000
[Jun  4 23:13:57.194] rs.nx:  60 rs.ny:  127
[Jun  4 23:13:57.272] ++++ {"UnixTime":1559657636.312038}
[Jun  4 23:13:57.304] ++++ {"UnixTime":"2019-06-04 14:13:56"}
[Jun  4 23:13:57.417] ++++ {"CurrentTime":1559690036.312038}
[Jun  4 23:13:57.449] ++++ {"CurrentTime":"2019-06-04 23:13:56"}
[Jun  4 23:13:57.543] ++++ {"WeatherTime":1559690036.312038}
[Jun  4 23:13:57.560] ++++ {"WeatherTime":"2019-06-04 23:13:56"}
[Jun  4 23:13:57.704] +++ Weather time +++
[Jun  4 23:13:57.719] Year:  2019
[Jun  4 23:13:57.719] Month:  6
[Jun  4 23:13:57.735] Day:  4
[Jun  4 23:13:57.735] Hour:  23
[Jun  4 23:13:57.751] Minute:  13
[Jun  4 23:13:57.751] Sec:  56
[Jun  4 23:13:57.862] yearStr:  2019 monthStr:  6 dayStr:  04
[Jun  4 23:13:57.878] hourStr:  22 minStr:  13
[Jun  4 23:13:58.061] forecastURL:  http://newsky2.kma.go.kr/service/SecndSrtpdFrcstInfoService2/ForecastSpaceData?ServiceKey=GsIEPvrEMExP3XquMGH1bYL8tixNTFkfjICqMXpMg3z2%2Fm3GzrMkyvfkwMdk6bidaAPFrsJrojC829XMl0anMQ%3D%3D&base_date=2019604&base_time=2200&nx=60&ny=127&pageNo=1&numOfRows=7&_type=json


